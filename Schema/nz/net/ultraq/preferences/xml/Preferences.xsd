<?xml version="1.0" encoding="UTF-8"?>

<!--
   Copyright 2007, Emanuel Rabina (http://www.ultraq.net.nz/)

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<xsd:schema targetNamespace="http://www.ultraq.net.nz/preferences/xml"
	xmlns="http://www.ultraq.net.nz/preferences/xml"
	xmlns:ci="http://jaxb.dev.java.net/plugin/code-injector"
	xmlns:jxb="http://java.sun.com/xml/ns/jaxb" jxb:extensionBindingPrefixes="ci" jxb:version="1.0"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">

	<!-- Map schema to custom package -->
	<xsd:annotation>
		<xsd:appinfo>
			<jxb:schemaBindings>
				<jxb:package name="nz.net.ultraq.preferences.xml"/>
			</jxb:schemaBindings>
		</xsd:appinfo>
	</xsd:annotation>

	<!-- Root element -->
	<xsd:element name="preferences">
		<xsd:annotation>
			<xsd:appinfo>
				<jxb:class name="XmlRoot"/>
				<ci:code>
	/**
	 * Default constructor. 
	 */
	public XmlRoot() {
	}

	/**
	 * Constructor, set the name of this node.
	 * 
	 * @param name
	 */
	public XmlRoot(String name) {

		super(name);
	}
				</ci:code>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="Node"/>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<!-- Preferences node, a list of preferences and/or a parent of other preference nodes -->
	<xsd:complexType name="Nodes">
		<xsd:sequence>
			<xsd:element name="node" type="Node" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Node">
		<xsd:annotation>
			<xsd:appinfo>
				<jxb:class name="XmlNode"/>
				<ci:code>
	/**
	 * Default constructor. 
	 */
	public XmlNode() {
	}

	/**
	 * Constructor, set the name of this node.
	 * 
	 * @param name
	 */
	public XmlNode(String name) {

		this.name = name;
	}

	/**
	 * Compares preferences nodes.  Nodes are equal if they share the same
	 * 'package' name.
	 * 
	 * @return {@code true} if both objects share the same package name.
	 */
	@Override
	public boolean equals(Object o) {

		return o instanceof XmlNode &amp;&amp; ((XmlNode)o).name.equals(name);
	}
				</ci:code>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="entries" type="Entries" minOccurs="0"/>
			<xsd:element name="nodes" type="Nodes" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="required"/>
	</xsd:complexType>

	<!-- Preferences map, contains key/value pairs -->
	<xsd:complexType name="Entries">
		<xsd:sequence>
			<xsd:element name="entry" type="Entry" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Entry">
		<xsd:annotation>
			<xsd:appinfo>
				<jxb:class name="XmlEntry"/>
				<ci:code>
	/**
	 * Default constructor.
	 */
	public XmlEntry() {
	}

	/**
	 * Constructor, set the key and value of the entry.
	 * 
	 * @param key
	 * @param value
	 */
	public XmlEntry(String key, String value) {

		this.key = key;
		this.value = value;
	}
				</ci:code>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:string"/>
		</xsd:sequence>
		<xsd:attribute name="key" type="xsd:string"/>
	</xsd:complexType>

</xsd:schema>
